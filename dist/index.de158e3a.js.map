{"mappings":"AAAA,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAY,aAAE,CAAC,EAAG,CAAU,AAAV,EAAwB,AAAxB,sBAAwB;AACjD,GAAX,CAAC,KAAK,CAAC,GAAG,EAAE,CAAO,QAAE,CAAK,MAAG,CAAqB,AAArB,EAAyB,AAAzB,uBAAyB;AAErD,KAAC,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAM,OAAG,CAAkB,AAAlB,EAA8B,AAA9B,4BAA8B;AACpD,GAAT,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,GAAK,OAAO,CAAC,GAAG,CAAC,CAAC;EAAI,CAAoB,AAApB,EAAoC,AAApC,kCAAoC;AAC9D,CAAZ,AAAJ,EAAM,AAAN,IAAM;AACJ,CAAmC,AAArC,EAAiD,AAAjD,+CAAiD;AACrC,CAAoB,AAAhC,EAA4C,AAA5C,0CAA4C;AAChC,CAAqB,AAAjC,EAA6C,AAA7C,2CAA6C;AACjC,CAAuB,AAAnC,EAA+C,AAA/C,6CAA+C;AACnC,CAAqB,AAAjC,EAA6C,AAA7C,2CAA6C;AACjC,CAAR,AAAJ,EAAM,AAAN,IAAM;AACJ,CAAwB,AAA1B,EAAsC,AAAtC,oCAAsC;AAC1B,CAAe,AAA3B,EAAuC,AAAvC,qCAAuC;AAC3B,CAAR,AAAJ,EAAM,AAAN,IAAM;AACJ,CAAkC,AAApC,EAAgD,AAAhD,8CAAgD;AACpC,CAAiB,AAA7B,EAA6C,AAA7C,2CAA6C;AAC7B,CAAiB,AAAjC,EAA6C,AAA7C,2CAA6C;AACjC,CAAiC,AAA7C,EAAqD,AAArD,mDAAqD;AAC7C,CAAiC,AAAzC,EAAiD,AAAjD,+CAAiD;AACzC,CAAoC,AAA5C,EAAoD,AAApD,kDAAoD;AAC5C,CAA6B,AAArC,EAAqD,AAArD,mDAAqD;AACrC,CAAsB,AAAtC,EAAsD,AAAtD,oDAAsD;AACtC,CAAZ,AAAJ,EAAM,AAAN,IAAM;AACJ,CAA2B,AAA7B,EAAuD,AAAvD,qDAAuD;AAC7B,CAAC,AAA3B,EAAyC,AAAzC,uCAAyC;AAC3B,CAAe,AAA7B,EAA2C,AAA3C,yCAA2C;AAC7B,CAAkB,AAAhC,EAAoD,AAApD,kDAAoD;AAChC,CAAI,AAAxB,EAAoC,AAApC,kCAAoC;AACxB,CAAgB,AAA5B,EAAwC,AAAxC,sCAAwC;AAC5B,CAAmB,AAA/B,EAA+C,AAA/C,6CAA+C;AAC/B,CAAW,AAA3B,EAA2B,AAA3B,yCAA2B","sources":["src/main.js"],"sourcesContent":["const div = dom.find(\"#test>.red\")[0]; // 获取对应的元素\r\ndom.style(div, \"color\", \"red\"); // 设置 div.style.color\r\n\r\nconst divList = dom.find(\".red\"); // 获取多个 div.red 元素\r\ndom.each(divList, (n) => console.log(n)); // 遍历 divList 里的所有元素\r\n// 增\r\n// dom.create(`<div>hi</div>`) 用于创建节点\r\n// dom.after(node, node2) 用于新增弟弟\r\n// dom.before(node, node2) 用于新增哥哥\r\n// dom.append(parent, child) 用于新增儿子\r\n// dom.wrap(`<div></div>`) 用于新增爸爸\r\n// 删\r\n// dom.remove(node) 用于删除节点\r\n// dom.empty(parent) 用于删除后代\r\n// 改\r\n// dom.attr(node, 'title', ?) 用于读写属性\r\n// dom.text(node, ?) 用于读写文本内容\r\n// dom.html(node, ?) 用于读写 HTML 内容\r\n// dom.style(node, {color: 'red'}) 用于修改 style\r\n// dom.class.add(node, 'blue') 用于添加 class\r\n// dom.class.remove(node, 'blue') 用于删除 class\r\n// dom.on(node, 'click', fn) 用于添加事件监听\r\n// dom.off(node, 'click', fn) 用于删除事件监听\r\n// 查\r\n// dom.find('选择器') 用于获取标签或标签们\r\n// dom.parent(node) 用于获取父元素\r\n// dom.children(node) 用于获取子元素\r\n// dom.siblings(node) 用于获取兄弟姐妹元素\r\n// dom.next(node) 用于获取弟弟\r\n// dom.previous(node) 用于获取哥哥\r\n// dom.each(nodes, fn) 用于遍历所有节点\r\n// dom.index(node) 用于获取排行老几\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}